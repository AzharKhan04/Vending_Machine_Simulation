{"version":3,"sources":["UIComponent/Bottom.jsx","UIComponent/UICard/UICard.jsx","ProductContainer/Product.jsx","Constants/products.js","ProductContainer/ProductService.js","Constants/actions.js","ProductContainer/ProductContainer.jsx","CurrencyTypeSelector/CurrencyAddedTable.jsx","Constants/vendingMachineAvailableCurrencies.js","Service/CurrencyExchangeService.js","Service/Order.js","CurrencyTypeSelector/CurrencyTypeSelector.jsx","CurrencyTypeSelector/index.jsx","ProductSelectedInfo/ProductSelectedInfo.jsx","ProductSelectedInfo/index.js","Welcome/Welcome.jsx","Welcome/index.js","App.js","reportWebVitals.js","appReducer.js","store.js","index.js"],"names":["Bottom","props","className","children","UICard","clasess","join","defaultProps","Product","data","Fragment","style","display","flexDirection","textAlign","paddingTop","productName","productPrice","products","id","productCount","productDescription","ProductService","localStorage","getItem","this","JSON","parse","setItem","stringify","prototype","getAllProducts","Promise","resolve","reject","error","ACTIONS","PRODUCT_SELECTED","PRODUCT_UNSELECTED","ProductContainer","useState","_products","setProducts","_selected","setSelected","openError","setOpenError","dispatch","useDispatch","productService","getProducts","a","useEffect","Box","sx","flexGrow","Grid","container","spacing","map","product","index","indexOf","item","xs","sm","md","lg","onClick","evt","selectedProduct","preventDefault","newId","newSelected","splice","type","payload","push","selecteProduct","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","fontSize","DialogActions","Button","color","CurrencyAddedTable","setData","flexWrap","Object","keys","k","label","Stack","direction","Chip","onDelete","newData","deleteIcon","variant","currencyAvailabe","CurrencyExchangeSerive","getCurrency","console","log","currencyExchangeService","order","currenciesRecived","amountToDeduct","totalAmountRecieved","amountToReturn","currencyArray","sort","b","newCurrencyAvailable","forEach","key","Number","currencyReturning","change","updateVendingMachine","then","res","message","currency","numCurrency","Math","floor","newCurrencies","productsIds","p","newProducts","CurrencyTypeSelector","valueProp","value","other","React","setValue","options","currencyOpted","setCurrencyOpted","count","setCount","currencyAdded","setCurrencyAdded","radioGroupRef","width","maxHeight","maxWidth","TransitionProps","onEntering","current","focus","alignItems","FormControl","m","minWidth","InputLabel","Select","labelId","onChange","target","autoWidth","option","MenuItem","TextField","num","isNaN","parseInt","InputProps","inputProps","min","max","newCurrencyAdded","autoFocus","length","productSelected","catch","err","amt","getPayAmount","connect","state","setOpen","openTransactionInfoModal","setOpenTransactionInfoModal","transactionInfoData","setTransactionInfoData","currencyTypeSelectorKey","setCurrencyTypeSelectorKey","Typography","gutterBottom","component","border","ps","keepMounted","window","location","reload","iconStyle","result","o","getChangeRecived","ProductSelectedInfo","Welcome","padding","memo","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","appReducer","action","newProductSelected","_newProductSelected","i","some","createStore","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.73a7f72f.chunk.js","sourcesContent":["import React  from \"react\";\n\nconst Bottom = (props) => {\n\n    return (\n        <div className=\"bottom\">{props.children}</div>\n    )\n\n}\n\nexport default Bottom","import React  from \"react\";\nimport './index.css';\n\nconst UICard = (props) => {\n\n\n    const clasess = [\"ui_card\",...props.clasess]\n\n\n    return (\n        <div className = {clasess.join(' ')}>\n            {props.children}\n\n         </div>   \n    )\n\n\n\n}\n\nUICard.defaultProps = {\n    clasess:[]\n}\n\nexport default UICard\n\n","import React from \"react\";\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\nconst Product = ({data}) => {\n\n    return (\n\n        <React.Fragment>\n\n        {/* <div style={{textAlign:'start'}}>\n            <img width={\"100%\"}  src=\"https://rukminim1.flixcart.com/image/832/832/klscivk0/spice-masala/0/5/q/turmeric-powder-pouch-tata-sampann-powder-original-imagytt7kkkcgbmk.jpeg?q=70\"/>\n\n         </div>    */}\n\n        <div style = {{display:'flex',flexDirection:'column'}}>\n\n<div style={{textAlign:'start',  paddingTop:'10px'}}>\n\n{data.productName}\n\n </div>\n\n <div style={{textAlign:'start',paddingTop:'10px'}}>\n<strong> &#x20B9;{`${data.productPrice || ''}`}</strong>\n</div>\n\n\n          </div>  \n\n</React.Fragment>\n\n\n\n\n\n\n        \n\n\n\n    )\n\n\n\n}\n\nProduct.defaultProps = {\n    data:{}\n}\n\nexport default Product;","const products = [{\n    id: 0,\n    productCount: 100,\n    productDescription: \"Culpa sed tenetur incidunt quia veniam sed molliti\",\n    productName: \"Nulla\",\n    productPrice: 207\n}, {\n    id: 1,\n    productCount: 100,\n    productDescription: \"Nam incidunt blanditiis odio inventore. Nobis volu\",\n    productName: \"Corporis\",\n    productPrice: 271\n}, {\n    id: 2,\n    productCount: 100,\n    productDescription: \"Quod reiciendis aspernatur ipsum cum debitis. Quis\",\n    productName: \"Minus\",\n    productPrice: 295\n}, {\n    id: 3,\n    productCount: 100,\n    productDescription: \"Occaecati dolore assumenda facilis error quaerat. \",\n    productName: \"Qui\",\n    productPrice: 280\n}, {\n    id: 4,\n    productCount: 100,\n    productDescription: \"Autem blanditiis similique saepe excepturi at erro\",\n    productName: \"Similique\",\n    productPrice: 262\n}, {\n    id: 5,\n    productCount: 100,\n    productDescription: \"Quos accusamus distinctio voluptates ducimus neque\",\n    productName: \"Soluta\",\n    productPrice: 109\n}, {\n    id: 6,\n    productCount: 100,\n    productDescription: \"Error voluptate recusandae reiciendis adipisci nec\",\n    productName: \"Quos\",\n    productPrice: 247\n}, {\n    id: 7,\n    productCount: 100,\n    productDescription: \"Tempora sed explicabo quae recusandae vitae debiti\",\n    productName: \"Sunt\",\n    productPrice: 297\n}, {\n    id: 8,\n    productCount: 100,\n    productDescription: \"Id pariatur at modi esse distinctio error. Dolores\",\n    productName: \"Nemo\",\n    productPrice: 143\n}, {\n    id: 9,\n    productCount: 100,\n    productDescription: \"Explicabo distinctio labore eius. Culpa provident \",\n    productName: \"Quo\",\n    productPrice: 150\n}, {\n    id: 10,\n    productCount: 100,\n    productDescription: \"Reprehenderit iste quos amet. Natus consequatur in\",\n    productName: \"Nobis\",\n    productPrice: 195\n}, {\n    id: 11,\n    productCount: 100,\n    productDescription: \"Nihil magni libero sapiente voluptate. Perspiciati\",\n    productName: \"Explicabo\",\n    productPrice: 253\n}, {\n    id: 12,\n    productCount: 100,\n    productDescription: \"Ut assumenda soluta esse officia. Quos quaerat sus\",\n    productName: \"Hic\",\n    productPrice: 178\n}, {\n    id: 13,\n    productCount: 100,\n    productDescription: \"Aut quam nisi libero distinctio. Temporibus rerum \",\n    productName: \"Occaecati\",\n    productPrice: 199\n}, {\n    id: 14,\n    productCount: 100,\n    productDescription: \"Iste repudiandae nostrum ea iste voluptate ducimus\",\n    productName: \"Consequatur\",\n    productPrice: 152\n}, {\n    id: 15,\n    productCount: 100,\n    productDescription: \"Sint aperiam voluptatum laudantium laborum at debi\",\n    productName: \"Assumenda\",\n    productPrice: 236\n}, {\n    id: 16,\n    productCount: 100,\n    productDescription: \"Temporibus reiciendis inventore ratione asperiores\",\n    productName: \"Placeat\",\n    productPrice: 115\n}, {\n    id: 17,\n    productCount: 100,\n    productDescription: \"In sequi cumque quisquam corrupti doloribus suscip\",\n    productName: \"Facilis\",\n    productPrice: 130\n}, {\n    id: 18,\n    productCount: 100,\n    productDescription: \"Corrupti sint occaecati doloribus maiores. Exceptu\",\n    productName: \"Ratione\",\n    productPrice: 117\n}, {\n    id: 19,\n    productCount: 100,\n    productDescription: \"Exercitationem debitis enim eum nemo necessitatibu\",\n    productName: \"Non\",\n    productPrice: 230\n}, {\n    id: 20,\n    productCount: 100,\n    productDescription: \"A similique facilis facilis. Excepturi repudiandae\",\n    productName: \"Quaerat\",\n    productPrice: 274\n}, {\n    id: 21,\n    productCount: 100,\n    productDescription: \"Maiores eveniet dolores laudantium quae doloribus \",\n    productName: \"Fugiat\",\n    productPrice: 167\n}, {\n    id: 22,\n    productCount: 100,\n    productDescription: \"Quas a at officia quod in quod. Impedit deserunt t\",\n    productName: \"Voluptas\",\n    productPrice: 278\n}, {\n    id: 23,\n    productCount: 100,\n    productDescription: \"Alias maiores soluta ab earum asperiores praesenti\",\n    productName: \"Repellendus\",\n    productPrice: 285\n}, {\n    id: 24,\n    productCount: 100,\n    productDescription: \"Assumenda debitis voluptatem magnam temporibus mol\",\n    productName: \"Quibusdam\",\n    productPrice: 209\n}]\n\n\nexport default products;","import products from '../Constants/products'\n\nfunction ProductService() {\n\n    let existingProducts = localStorage.getItem('products')\n    if (!existingProducts) {\n        localStorage.setItem('products', JSON.stringify(products))\n        this.products = products\n    } else {\n\n        this.products = JSON.parse(localStorage.getItem('products'))\n\n    }\n\n\n\n}\n\nProductService.prototype.getAllProducts = function() {\n\n    return new Promise((resolve, reject) => {\n        if (this.products) {\n            resolve(this.products)\n        } else {\n            reject({\n                error: 'no products found'\n            })\n        }\n    })\n}\n\nexport default ProductService","const ACTIONS = {\n    PRODUCT_SELECTED: 'PRODUCT_SELECTED',\n    PRODUCT_UNSELECTED: 'PRODUCT_UNSELECTED'\n\n}\n\nexport default ACTIONS;","import React, {useEffect,useState} from \"react\";\nimport UICard from \"../UIComponent/UICard/UICard\";\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Product  from \"./Product\";\nimport ProductService from \"./ProductService\";\nimport { useDispatch } from 'react-redux'\nimport ACTIONS from '../Constants/actions';\nimport Snackbar from '@mui/material/Snackbar';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\n\nconst ProductContainer = () => {\n\n    const [_products,setProducts] = useState([])\n    const [_selected,setSelected] = useState([])\n    const [openError,setOpenError] = useState(false)\n\n\n    const dispatch = useDispatch()\n\n\n    const productService = new ProductService();\n\n    \n    const getProducts = async() => {\n        try {\n            let products = await productService.getAllProducts()\n            if(products) {\n                setProducts(products)\n            }\n        } catch(err) {\n            //console.log(err)\n\n        }\n    }\n\n    useEffect(()=>{\n        getProducts()\n    },[])\n\n    const selecteProduct  = (evt,selectedProduct) => {\n        evt.preventDefault()\n\n        if(selectedProduct.productCount<=0) {\n            setOpenError(true);\n            return ;\n        }\n\n\n\n        let newId = selectedProduct.id\n        let newSelected  = [..._selected]\n\n        const index = newSelected.indexOf(newId);\n        if (index > -1) {\n            newSelected.splice(index, 1);\n            dispatch({ type: ACTIONS.PRODUCT_UNSELECTED,payload:selectedProduct })\n\n        } else {\n            newSelected.push(newId)\n            dispatch({ type: ACTIONS.PRODUCT_SELECTED,payload:selectedProduct })\n        }\n\n        setSelected(newSelected)\n    }\n\n\n\n    return(\n    <div style={{'padding':'12px'}}>\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={1}>\n          {\n              _products.map((product,index)=>{\n                let className = ''\n\n                if(_selected.indexOf(product.id)>-1) {\n                     className = 'product_selected'\n                }\n\n                  return (\n                    <Grid item xs={6} sm = {6} md={3} lg={3}>\n                        <div className = {className} onClick ={(evt)=>selecteProduct(evt,product)} style={{'cursor':'pointer'}}> \n                        <UICard clasess={['product_container']}>\n                        <Product key = {index} data = {product}/>\n                        </UICard>\n                        </div>\n                    </Grid>\n              \n                  )\n              })\n          }\n  \n      </Grid>\n    </Box>\n\n    <Dialog\n        open={openError}\n        onClose={()=>{\n            setOpenError(false);\n\n\n        }}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n         {'Sorry'} \n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText style={{fontSize:'14px'}} id=\"alert-dialog-description\">\n              This Product Currently Not Available\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n          style={{color:'goldenrod'}} \n          onClick={()=>{\n            setOpenError(false);\n\n\n          }}>Ok</Button>\n        </DialogActions>\n      </Dialog>\n\n\n    </div>\n    )\n\n}\n\nexport default ProductContainer;","import * as React from 'react';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\n\nimport PropTypes from 'prop-types';\n\n\nfunction CurrencyAddedTable(props) {\n\n  const { data , setData} = props;\n\n \n\n  const handleDelete = () => {\n\n    console.log()\n  };\n\n  \n  return (\n     <React.Fragment>\n         <div style={{display:'flex',flexWrap:'wrap'}}>\n         {\n             Object.keys(data).map((k,index)=>{\n                let label = `${k} : ${data[k]}`\n\n                 return (\n\n                    <div style={{'padding':'4px'}} key = {index}>\n                    <Stack key = {index} direction=\"row\" spacing={2}>\n\n                    <Chip\n                      label={label}\n                      onDelete={(evt)=>{\n\n                        let newData = {...data}\n                        delete newData[k]\n\n                          setData(newData)\n                      }}\n                      deleteIcon={<DeleteIcon />}\n                      variant=\"outlined\"\n                    />\n                  </Stack>\n                  </div>\n                \n                 )\n             })\n         }\n         </div>\n     </React.Fragment>\n\n  \n  \n  \n  );\n}\n\nCurrencyAddedTable.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default CurrencyAddedTable\n","let currencyAvailabe = {\n    2000: 100,\n    500: 300,\n    200: 400,\n    100: 1000,\n    50: 2000,\n    20: 3500,\n    10: 5000,\n    5: 4500,\n    2: 6000,\n    1: 10000\n\n}\n\nexport default currencyAvailabe","import currencyAvailabe from \"../Constants/vendingMachineAvailableCurrencies\"\n\nfunction CurrencyExchangeSerive() {\n\n    let existingCurrency = localStorage.getItem('currencyAvailabe')\n    if (!existingCurrency) {\n        localStorage.setItem('currenciesAvailable', JSON.stringify(currencyAvailabe))\n        this.currencyAvailabe = currencyAvailabe\n    } else {\n\n        this.currencyAvailabe = JSON.parse(localStorage.getItem('currencyAvailabe'))\n\n    }\n\n\n\n}\n\nCurrencyExchangeSerive.prototype.getCurrency = function() {\n    console.log(this)\n\n    return new Promise((resolve, reject) => {\n        if (this.currencyAvailabe) {\n            resolve(this.currencyAvailabe)\n        } else {\n            reject('no curreincies foun')\n        }\n    })\n}\n\nexport default CurrencyExchangeSerive","import ProductService from \"../ProductContainer/ProductService\"\nimport CurrencyExchangeSerive from './CurrencyExchangeService';\n\nconst currencyExchangeService = new CurrencyExchangeSerive();\n\nconst order = async(products, currenciesRecived) => {\n\n    return new Promise(async(resolve, reject) => {\n\n        if (!products || !currenciesRecived) {\n            reject({\n                error: \"Error\"\n            })\n        }\n\n        try {\n\n            let amountToDeduct = 0;\n            let totalAmountRecieved = 0;\n            let amountToReturn = 0;\n\n\n            products.map((product) => {\n                amountToDeduct = amountToDeduct + product.productPrice\n            })\n\n            let currencyAvailabe = await currencyExchangeService.getCurrency()\n            let currencyArray = Object.keys(currencyAvailabe)\n            currencyArray = currencyArray.sort((a, b) => {\n                return b - a\n            })\n\n\n            let newCurrencyAvailable = {\n                ...currencyAvailabe\n            }\n\n\n            Object.keys(currenciesRecived).forEach((key) => {\n                totalAmountRecieved = totalAmountRecieved + Number(currenciesRecived[key]) * Number(key)\n                newCurrencyAvailable[key] = newCurrencyAvailable[key] + currenciesRecived[key]\n\n            })\n\n            amountToReturn = totalAmountRecieved - amountToDeduct\n\n            let currencyReturning = {\n\n            }\n\n            if (totalAmountRecieved < amountToDeduct) {\n\n                reject({\n                    error: \"Insufficient fund insterted\",\n                    change: currenciesRecived\n                })\n\n            }\n\n            if (amountToReturn == 0) {\n\n                updateVendingMachine(products, newCurrencyAvailable).then((res) => {\n\n\n                    resolve({\n                        message: \"Please Collect Your Product\",\n                        data: products,\n                        change: null\n                    })\n\n\n                })\n\n\n            } else {\n\n\n                currencyArray.forEach((currency) => {\n\n                    let numCurrency = Number(currency)\n                    let res = Math.floor((amountToReturn / numCurrency))\n\n                    if (res > 0) {\n\n                        if (currencyAvailabe[numCurrency] > 0) {\n                            newCurrencyAvailable[numCurrency] = newCurrencyAvailable[numCurrency] - res\n                            currencyReturning[numCurrency] = res;\n                            amountToReturn = amountToReturn - (numCurrency * res)\n\n                        }\n\n\n\n                    }\n\n\n                })\n\n                if (amountToReturn > 0) {\n                    reject({\n                        error: \"No Change Available\",\n                        change: currenciesRecived\n                    })\n                } else {\n\n                    updateVendingMachine(products, newCurrencyAvailable).then((res) => {\n\n                        resolve({\n                            message: \"Please Collect Your Product(s)\",\n                            change: currencyReturning,\n                            data: products\n                        })\n\n                    })\n\n\n                }\n\n\n\n\n            }\n\n        } catch (err) {\n            reject(err)\n        }\n\n\n\n\n    })\n\n\n}\n\nconst updateVendingMachine = (products, newCurrencies) => {\n\n\n    let productsIds = []\n\n    products.forEach((p) => {\n        productsIds.push(p.id)\n    })\n\n    let ps = new ProductService()\n\n    return ps.getAllProducts().then((products) => {\n        let newProducts = products.map((p) => {\n            if (productsIds.indexOf(p.id) > -1) {\n                p.productCount = p.productCount - 1\n            }\n            return p;\n        })\n\n        localStorage.setItem('currenciesAvailable', JSON.stringify(newCurrencies))\n        localStorage.setItem('products', JSON.stringify(newProducts))\n\n\n    })\n\n\n\n\n}\n\n\n\nexport default order","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport Dialog from '@mui/material/Dialog';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport Radio from '@mui/material/Radio';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport AddSharpIcon from '@mui/icons-material/AddSharp';\nimport DeleteSharpIcon from '@mui/icons-material/DeleteSharp';\nimport CurrencyAddedTable from './CurrencyAddedTable';\n\n//import services\nimport CurrencyListService from './CurrencyListService'\nimport order from '../Service/Order';\n\nfunction CurrencyTypeSelector(props) {\n  const { onClose, value: valueProp, open, ...other } = props;\n  const [value, setValue] = React.useState(valueProp);\n  const [options, setOption] = React.useState([\n      '1','2','5','10','20','50','100','200','500','2000'\n  ]);\n  const [currencyOpted, setCurrencyOpted] = React.useState(100);\n\n  const [count, setCount] = React.useState(1);\n\n  const [currencyAdded, setCurrencyAdded] = React.useState({});\n\n\n\n\n  const radioGroupRef = React.useRef(null);\n\n  const getCurrencyList = () => {\n\n  }\n\n  React.useEffect(() => {\n    getCurrencyList();\n  }, []);\n\n\n\n  React.useEffect(() => {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  const handleEntering = () => {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  };\n\n  const handleCancel = () => {\n    onClose();\n  };\n\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const onChangeCurrencyOpted = (evt) => {\n    setCurrencyOpted(Number(evt.target.value))\n  }\n\n  const onChangeCount = (evt) => {\n\n    let num = evt.target.value\n    if(!num || typeof num!=='string') {\n        num = 1\n    } else if(isNaN(evt.target.value)){\n        num = 1\n    }  else if(Number(evt.target.value)>100) {\n        num =100\n    }   else if(Number(evt.target.value)<=0) {\n        num =1\n    } else {\n        num = Number(evt.target.value)\n    }\n    setCount(parseInt(num))    \n    }\n\n\n    const getPayAmount = ()=> {\n\n        let amt = 0;\n\n        if(!Object.keys(currencyAdded).length) {\n            amt = amt+Number(currencyOpted)*Number(count)\n        } else {\n\n            Object.keys(currencyAdded).forEach((key)=>{\n\n                amt =amt+ Number(key)*Number(currencyAdded[key])\n\n            })\n\n        }\n\n        return `Pay ${amt}`\n\n\n    }\n\n    const addCurrency = () => {\n\n        let newCurrencyAdded = {...currencyAdded}\n        newCurrencyAdded[currencyOpted] = count\n        setCurrencyAdded(newCurrencyAdded)\n        setCurrencyOpted(100)\n        setCount(1)\n    }\n\n    const handleFinalPay = () => {\n\n\n        let newCurrencyAdded = {...currencyAdded}\n\n\n        if(!Object.keys(currencyAdded).length) {\n            newCurrencyAdded[currencyOpted] = count\n    \n        }\n\n        console.log(newCurrencyAdded)\n\n\n\n        order(props.productSelected,newCurrencyAdded).then((res)=>{\n            onClose(res);\n\n        }).catch((err)=>{\n\n            onClose(err)\n\n\n        })\n\n\n\n    }\n\n  \n\n  return (\n    <Dialog\n      sx={{ '& .MuiDialog-paper': { width: '80%', maxHeight: 435 } }}\n      maxWidth=\"xs\"\n      TransitionProps={{ onEntering: handleEntering }}\n      open={open}\n      {...other}\n    >\n      <DialogTitle>\n      <div style={{alignItems:'center',  display:'flex'}}>\n          <div>{'Wallet'}</div>\n          <div>\n          {/* <AccountBalanceWalletIcon></AccountBalanceWalletIcon> */}\n\n          </div>\n</div>\n      </DialogTitle>\n      <DialogContent >\n      <div style={{alignItems:'center',  display:'flex'}}>\n        <div>  \n      <FormControl sx={{ m: 1, minWidth: 80 }}>\n        <InputLabel id=\"currency-label\">Currency</InputLabel>\n        <Select\n          labelId=\"currency-label\"\n          id=\"demo-simple-select-autowidth\"\n          value={currencyOpted}\n          onChange={onChangeCurrencyOpted}\n          autoWidth\n          label=\"Currency\"\n        >\n          {\n              options.map((option,index)=>{\n                  return (\n                    <MenuItem key = {index} value={option}>{option}</MenuItem>\n\n                  )\n              })\n          }\n        </Select>\n\n      </FormControl>\n      </div>\n      <div>\n      <FormControl sx={{ m: 1, minWidth: 80 }}>\n\n      <TextField value = {count} onChange = {onChangeCount}    InputProps={{ inputProps: { min: 1, max: 100 } }}\n  type = {'number'} id=\"count\" label=\"Count\" variant=\"outlined\" />\n</FormControl>\n          </div>\n          <div>\n              <AddSharpIcon onClick = {addCurrency}></AddSharpIcon>\n           </div>   \n    </div>\n\n    <div>\n        <CurrencyAddedTable setData = {(newData)=>{\n            setCurrencyAdded(newData)\n\n        }} data= {currencyAdded}></CurrencyAddedTable>\n     </div>   \n\n      </DialogContent>\n      <DialogActions>\n        <Button style={{color:'goldenrod'}}  autoFocus onClick={handleCancel}>\n          Cancel\n        </Button>\n        <Button style={{color:'goldenrod'}}   onClick={handleFinalPay}>{getPayAmount()}</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nCurrencyTypeSelector.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default CurrencyTypeSelector\n","import CurrencyTypeSelector from './CurrencyTypeSelector'\nexport default CurrencyTypeSelector","import * as React from 'react';\nimport {  connect } from 'react-redux'\n\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport Dialog from '@mui/material/Dialog';\nimport CurrencyTypeSelector from '../CurrencyTypeSelector';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\n\n\nconst ProductSelectedInfo = (props) => {\n\n    const [open, setOpen] = React.useState(false);\n    const [value, setValue] = React.useState('INR');\n    const [openTransactionInfoModal, setOpenTransactionInfoModal] = React.useState(false);\n    const [transactionInfoData, setTransactionInfoData] = React.useState({});\n\n\n\n\n\n    const [currencyTypeSelectorKey, setCurrencyTypeSelectorKey] = React.useState(1);\n\n\n\n    const handleClickListItem = () => {\n        setOpen(true);\n      };\n    \n      const handleClose = (data=null) => {\n        setOpen(false);\n        setCurrencyTypeSelectorKey(currencyTypeSelectorKey+1);\n\n\n\n        if(data) {\n            setOpenTransactionInfoModal(true)\n            setTransactionInfoData(data)\n        }\n\n    \n      };\n\n    const getPayAmount = () => {\n        let amt = 0;\n        props.productSelected.forEach((ps)=>{\n            amt = amt+Number(ps.productPrice)\n        })\n        return amt\n    }\n\n    const getChangeRecived = () => {\n\n      let result = 0;\n\n      if(transactionInfoData && transactionInfoData.change) {\n        Object.keys(transactionInfoData.change).forEach((o)=>{\n          result = result + Number(o)*transactionInfoData.change[o]\n        })\n\n\n      }\n\n      return result\n    }\n\n      \n\n    return (\n      <React.Fragment>\n          {\n              props.productSelected  && props.productSelected.length ?\n                      <Box sx={{ flexGrow: 1 }}>\n                      <Grid alignItems={\"center\"} container spacing={2}>\n                        <Grid item xs={12} sm = {12} lg = {12}>\n                        <Typography variant=\"h3\" gutterBottom component=\"div\">\n                        <Button onClick = {()=>{\n                            setOpen(true);\n\n                        }} style={{width:'90%',color:'goldenrod',border:'1px solid goldenrod'}}  variant=\"outlined\">Proceed to pay &#8377; {getPayAmount()}\n                        <ArrowForwardIcon></ArrowForwardIcon>\n                        </Button>\n              \n                    </Typography>\n              \n                        </Grid>\n              \n                      </Grid>\n                    </Box> : <></>\n              \n          }\n        <CurrencyTypeSelector\n          id=\"ringtone-menu\"\n          keepMounted\n          open={open}\n          productSelected = {props.productSelected}\n          onClose={handleClose}\n\n          key = {currencyTypeSelectorKey}\n          value={value}\n        />\n        {\n                  <Dialog\n                  open={openTransactionInfoModal}\n                  onClose={()=>{\n                    setOpenTransactionInfoModal(false)\n                    window.location.reload()\n\n\n                  }}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle style={{fontSize:'16px'}} id=\"alert-dialog-title\">\n                   \n                   {\n                     transactionInfoData.message ?\n                     <div style ={{textAlign:'center',color:'goldenrod'}}>\n                     <CheckCircleOutlineIcon iconStyle={{fontSize:'200px'}} ></CheckCircleOutlineIcon>\n\n                     </div>\n                     : null\n                   }\n                   {transactionInfoData.message || transactionInfoData.error}\n                   \n                  </DialogTitle>\n                  <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        {\n                            transactionInfoData.data ? \n                            <div style={{display:'flex',flexWrap:'wrap'}}>\n                            {\n                                transactionInfoData.data.map((product,index)=>{\n                   \n                                    return (\n                   \n                                       <div style={{'padding':'4px'}} key = {index}>\n                                       <Stack key = {index} direction=\"row\" spacing={2}>\n                   \n                                       <Chip\n                                         label={product.productName}   \n                                         variant=\"outlined\"\n                                       />\n                                     </Stack>\n                                     </div>\n                                   \n                                    )\n                                })\n                            }\n                            </div> : <div></div>\n                   \n                        }\n\n                        {\n                            transactionInfoData.change ? \n                            <React.Fragment>\n                            <div style={{'fontSize':'16px',textAlign:'center',paddingTop:'30px'}}>\n                            {\"Please Collect Your Change \"}\n                            &#x20B9;\n                            {getChangeRecived()}\n\n                             </div>   \n                            <div style={{display:'flex',flexWrap:'wrap'}}>\n\n\n\n                                {\n            Object.keys(transactionInfoData.change).map((k,index)=>{\n                let label = `${k} : ${transactionInfoData.change[k]}`\n\n                 return (\n\n                    <div style={{'padding':'4px'}} key = {index}>\n                    <Stack key = {index} direction=\"row\" spacing={2}>\n\n                    <Chip\n                      label={label}\n                                            variant=\"outlined\"\n                    />\n                  </Stack>\n                  </div>\n                \n                 )\n             })\n         }\n\n\n                            </div>\n                            </React.Fragment> : <div></div>\n                   \n                        }\n\n\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button\n                    style={{color:'goldenrod'}} \n                    \n                    onClick={()=>{\n                        setOpenTransactionInfoModal(false)\n                        window.location.reload()\n                    }} autoFocus>\n                      OK\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n          \n\n\n\n\n        }\n\n      </React.Fragment>\n\n    )\n}\n\nconst mapStateToProps =(state) => ({\n    productSelected : state.productSelected\n    }\n)\n\n\nexport default connect(mapStateToProps,{})(ProductSelectedInfo);","import ProductSelectedInfo from './ProductSelectedInfo'\nexport default ProductSelectedInfo","import React from \"react\";\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\nconst Welcome = () => {\n\n    return (\n        <div style={{padding:'12px'}}>\n        <Grid style={{textAlign:'start'}} container spacing={1}>\n        <Grid item xs={12} sm = {12} md={12} lg={12}>\n        <Typography style ={{color:'goldenrod'}} variant=\"h5\" gutterBottom component=\"div\">\n        {' Hello there'}\n      </Typography>\n \n        </Grid>\n        <Grid item xs={12} sm = {12} md={12} lg={12}>\n        <Typography style ={{color:'lightgrey'}} variant=\"\" gutterBottom component=\"div\">\n        {' Please click on the products below to buy'}\n      </Typography>\n \n        </Grid>\n\n        </Grid>\n        </div>\n\n    )\n\n}\n\n\nexport default React.memo(Welcome);","import Welcome from \"./Welcome\";\nexport default Welcome","import './App.css';\nimport Bottom from './UIComponent/Bottom';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\n\nimport React from 'react';\nimport ProductContainer from './ProductContainer/ProductContainer';\nimport ProductSelectedInfo from './ProductSelectedInfo';\nimport Welcome from './Welcome';\nimport Header from './Header';\n\nfunction App() {\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        border: '2px solid #000',\n        boxShadow: 24,\n        p: 4,\n    };\n\n    return ( <\n        div className = \"App\" >\n        <\n        Welcome > < /Welcome> <\n        ProductContainer / >\n        <\n        Bottom >\n        <\n        ProductSelectedInfo / >\n        <\n        /Bottom> <\n        /div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ACTIONS from './Constants/actions';\n\n\nlet initialState = {\n\n    productSelected: []\n\n}\n\nfunction appReducer(state = initialState, action) {\n    console.log(action)\n    switch (action.type) {\n        case ACTIONS.PRODUCT_SELECTED:\n            let newProductSelected = [...state.productSelected]\n            newProductSelected.push(action.payload)\n            return {...state, productSelected: [...newProductSelected] }\n            break;\n\n        case ACTIONS.PRODUCT_UNSELECTED:\n            let _newProductSelected = [...state.productSelected]\n            let i = null\n            _newProductSelected.some((ps, index) => {\n                if (ps.id == action.payload.id) {\n                    i = index\n                }\n\n            })\n\n            console.log(i)\n            _newProductSelected.splice(i, 1)\n            console.log(\"hh\", _newProductSelected)\n\n            return {...state, productSelected: [..._newProductSelected] }\n\n\n        default:\n            return state;\n    }\n}\n\nexport default appReducer;","import { createStore } from \"redux\";\nimport appReducer from \"./appReducer\";\n\nexport default createStore(appReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render( <\n    React.StrictMode >\n    <\n    Provider store = { store } >\n    <\n    App / >\n    <\n    /Provider> <\n    /React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}